* {
  padding: 0;
  margin: 0;
  border: none;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

:focus,
:active {
  outline: none;
}

html,
body {
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  inline-size: 100%;
  block-size: 100%;
  font-size: 16px;
  line-height: 1;
}

html {
  scroll-behavior: smooth;
}

nav,
footer,
header,
aside {
  display: block;
}

a[href]:focus-visible {
  outline: 2px solid var(--outline-color, currentColor);
  outline-offset: 2px;
}

a {
  color: inherit;
}

a,
a:visited,
a:hover {
  text-decoration: none;
}

a:focus,
a:active {
  outline: none;
}

ul,
ul li,
ol,
ol li {
  list-style: none;
}

img {
  vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

address {
  font-style: normal;
}

.ibg {
  position: relative;
  isolation: isolate;
  overflow: hidden;
}

.ibg img {
  position: absolute;
  inset: 0;
  z-index: -2;
  inline-size: 100%;
  block-size: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}

.visually-hidden {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  margin: -1px;
  padding: 0;
  -webkit-clip-path: inset(100%);
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
  white-space: nowrap;
  border: none;
  outline: none;
  outline-offset: 0;
}

/*
 * Copyright (c) 2024 Javid Gulmaliyev
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * SCSS function responsive-value.
 * It is intended to handle responsive CSS property values without using media queries
 *
 * @access public
 * @author Javid Gulmaliyev
 *
 * @param {number} $start-value - The initial value of the property. Accepts only numeric values without units. Cannot be equal to $end-value.
 * @param {number} $end-value - The final value of the property. Accepts only numeric values without units. Cannot be equal to $start-value.
 * @param {number} $start-breakpoint - The initial breakpoint. At this breakpoint, the property value will be equal to $start-value. Accepts only positive numeric values without units. Cannot be less than or equal to $end-breakpoint.
 * @param {number} $end-breakpoint - The final breakpoint. At this breakpoint, the property value will be equal to $end-value. Accepts only positive numeric values or 0 (zero) without units. Cannot be greater than or equal to $start-breakpoint.
 * @param {string} $behavior - Accepts 4 values:
 *   - "not-fixed": The $start-value and $end-value properties are not fixed before and after breakpoints.
 *   - "fixed-both": The $start-value and $end-value properties are strictly fixed before and after breakpoints.
 *   - "fixed-start-value": At this value, $start-value is strictly fixed before $start-breakpoint. Default value.
 *   - "fixed-end-value": At this value, $end-value is strictly fixed after $end-breakpoint.
 * @param {string} $unit - CSS unit for numeric values. Default is "px". When changing the unit, $start-value, $end-value, $start-breakpoint, and $end-breakpoint should be written in the format of the specified unit.
 *
 * @return {string} One of the CSS mathematical functions: min(), max(), clamp().
 *
 * @example
 * .element {
 *     font-size: responsive-value(2, 1, 48, 23.4375, "fixed-both", "rem");
 *     padding: responsive-value(20, 10, 768, 375, "fixed-end-value", "px");
 *     margin-bottom: responsive-value(30, 15, 1440, 280);
 * }
 *
 * @throw {error} If $start-value, $end-value, $start-breakpoint, or $end-breakpoint are not numeric or have units.
 * @throw {error} If $start-value and $end-value are equal.
 * @throw {error} If $start-breakpoint is less than or equal to zero.
 * @throw {error} If $end-breakpoint is a negative number.
 * @throw {error} If $start-breakpoint is less than $end-breakpoint.
 * @throw {error} If $start-breakpoint is equal to $end-breakpoint.
 * @throw {error} If the value of $behavior is incorrect.
 */

.h2 {
  padding-block-start: 10px;
  font-size: min(36px, 18px + 18 * ((100vw - 320px) / 448));
  text-align: center;
  border-block-start: 1px solid #183605;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: "Cabin", sans-serif;
  font-size: min(20px, 14px + 6 * ((100vw - 320px) / 448));
  color: #042301;
}

.scroll-lock body {
  overflow: hidden;
}

.wrapper {
  position: relative;
  display: flex;
  flex-direction: column;
  min-block-size: 100%;
  overflow: hidden;
}

.container {
  max-inline-size: 1140px;
  margin-inline: auto;
  padding-inline: 20px;
}

.main {
  flex: 1 1 auto;
}

.advantages {
  padding-block: min(25px, 10px + 15 * ((100vw - 320px) / 820));
}

.advantages__header {
  margin-block-end: 10px;
}

.advantages__inner {
  position: relative;
  isolation: isolate;
  padding-block: 20px;
  font-weight: 500;
  font-size: min(24px, 14px + 10 * ((100vw - 320px) / 448));
  color: #fff;
}

.advantages__item {
  display: flex;
  align-items: center;
}

.advantages__icon {
  align-self: start;
  inline-size: min(60px, 40px + 20 * ((100vw - 320px) / 448));
  aspect-ratio: 1/1;
  flex: 0 0 auto;
  font-size: 0;
}

.advantages__icon img {
  -o-object-fit: contain;
  object-fit: contain;
}

.advantages__background {
  position: absolute;
  inset: 0;
  z-index: -1;
}

.advantages__background img {
  -o-object-position: 75% 50%;
  object-position: 75% 50%;
}

@media (min-width: 768.1px) {
  .advantages__inner {
    font-size: min(32px, 24px + 8 * ((100vw - 768px) / 372));
  }

  .advantages__icon {
    inline-size: min(80px, 60px + 20 * ((100vw - 768px) / 372));
  }

  .advantages__background img {
    -o-object-position: 100% 50%;
    object-position: 100% 50%;
  }
}

@media (hover: hover) {
  a[href]:hover {
    outline: none;
  }
}

@media (hover: none) {
  a[href]:active {
    outline: none;
    opacity: 0.5;
  }
}